{"ast":null,"code":"import _slicedToArray from\"/Users/test/Desktop/contact-keeper/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useReducer}from'react';import{v4 as uuid}from'uuid';import AlertContext from'./alertContext';import alertReducer from'./alertReducer';import{SET_ALERT,REMOVE_ALERT}from'../types';import{jsx as _jsx}from\"react/jsx-runtime\";var AlertState=function AlertState(props){var initialState=[];var _useReducer=useReducer(alertReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];// Set Alert\nvar setAlert=function setAlert(msg,type){var timeout=arguments.length>2&&arguments[2]!==undefined?arguments[2]:5000;var id=uuid();dispatch({type:SET_ALERT,payload:{msg:msg,type:type,id:id}});setTimeout(function(){return dispatch({type:REMOVE_ALERT,payload:id});},timeout);};return/*#__PURE__*/_jsx(AlertContext.Provider,{value:{alerts:state,setAlert:setAlert},children:props.children});};export default AlertState;","map":{"version":3,"sources":["/Users/test/Desktop/contact-keeper/client/src/context/alert/AlertState.js"],"names":["React","useReducer","v4","uuid","AlertContext","alertReducer","SET_ALERT","REMOVE_ALERT","AlertState","props","initialState","state","dispatch","setAlert","msg","type","timeout","id","payload","setTimeout","alerts","children"],"mappings":"+HAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,EAAE,GAAIC,CAAAA,IAAf,KAA0B,MAA1B,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAEA,OACEC,SADF,CACaC,YADb,KAEO,UAFP,C,2CAIA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,KAAK,CAAI,CAC1B,GAAMC,CAAAA,YAAY,CAAG,EAArB,CAEA,gBAA0BT,UAAU,CAACI,YAAD,CAAeK,YAAf,CAApC,4CAAOC,KAAP,iBAAcC,QAAd,iBAEA;AACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,GAAD,CAAMC,IAAN,CAA+B,IAAnBC,CAAAA,OAAmB,2DAAT,IAAS,CAC9C,GAAMC,CAAAA,EAAE,CAAGd,IAAI,EAAf,CACAS,QAAQ,CAAC,CACPG,IAAI,CAAET,SADC,CAEPY,OAAO,CAAE,CAAEJ,GAAG,CAAHA,GAAF,CAAOC,IAAI,CAAJA,IAAP,CAAaE,EAAE,CAAFA,EAAb,CAFF,CAAD,CAAR,CAKAE,UAAU,CAAC,iBAAMP,CAAAA,QAAQ,CAAC,CAAEG,IAAI,CAAER,YAAR,CAAsBW,OAAO,CAAED,EAA/B,CAAD,CAAd,EAAD,CAAsDD,OAAtD,CAAV,CACD,CARD,CAUA,mBACE,KAAC,YAAD,CAAc,QAAd,EACE,KAAK,CAAE,CACLI,MAAM,CAAET,KADH,CAELE,QAAQ,CAARA,QAFK,CADT,UAKIJ,KAAK,CAACY,QALV,EADF,CASD,CAzBD,CA2BA,cAAeb,CAAAA,UAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport { v4 as uuid} from 'uuid'\nimport AlertContext from './alertContext';\nimport alertReducer from './alertReducer';\n\nimport {\n  SET_ALERT, REMOVE_ALERT\n} from '../types';\n\nconst AlertState = props => {\n  const initialState = [];\n\n  const [state, dispatch] = useReducer(alertReducer, initialState);\n\n  // Set Alert\n  const setAlert = (msg, type, timeout = 5000) => {\n    const id = uuid();\n    dispatch({\n      type: SET_ALERT,\n      payload: { msg, type, id }\n    });\n\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout)\n  }\n\n  return (\n    <AlertContext.Provider\n      value={{\n        alerts: state,\n        setAlert\n      }}>\n      { props.children }\n    </AlertContext.Provider>\n  )\n};\n\nexport default AlertState;"]},"metadata":{},"sourceType":"module"}