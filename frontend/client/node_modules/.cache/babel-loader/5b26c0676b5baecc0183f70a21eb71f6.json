{"ast":null,"code":"import React,{Fragment,useContext,useEffect}from'react';import{CSSTransition,TransitionGroup}from'react-transition-group';import{ContactItem}from'./ContactItem';import ContactContext from'../../context/contact/contactContext';import{jsx as _jsx}from\"react/jsx-runtime\";var Contacts=function Contacts(){var contactContext=useContext(ContactContext);var contacts=contactContext.contacts,filtered=contactContext.filtered,getContacts=contactContext.getContacts,loading=contactContext.loading;useEffect(function(){getContacts();//eslint-disable-next-line\n},[]);if(contacts.length===0&&!loading){return/*#__PURE__*/_jsx(\"h4\",{children:\"Please add a contact\"});}return/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsx(TransitionGroup,{children:filtered!==null?filtered.map(function(contact){return/*#__PURE__*/_jsx(CSSTransition,{timeout:500,classNames:\"item\",children:/*#__PURE__*/_jsx(ContactItem,{contact:contact})},contact._id);}):contacts.map(function(contact){return/*#__PURE__*/_jsx(CSSTransition,{timeout:500,classNames:\"item\",children:/*#__PURE__*/_jsx(ContactItem,{contact:contact})},contact._id);})})});};export default Contacts;","map":{"version":3,"sources":["/Users/test/Desktop/contact-keeper/client/src/components/contacts/Contacts.js"],"names":["React","Fragment","useContext","useEffect","CSSTransition","TransitionGroup","ContactItem","ContactContext","Contacts","contactContext","contacts","filtered","getContacts","loading","length","map","contact","_id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,CAAsCC,SAAtC,KAAuD,OAAvD,CACA,OAASC,aAAT,CAAwBC,eAAxB,KAA+C,wBAA/C,CACA,OAASC,WAAT,KAA4B,eAA5B,CACA,MAAOC,CAAAA,cAAP,KAA2B,sCAA3B,C,2CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,GAAMC,CAAAA,cAAc,CAAGP,UAAU,CAACK,cAAD,CAAjC,CAEA,GAAQG,CAAAA,QAAR,CAAqDD,cAArD,CAAQC,QAAR,CAAkBC,QAAlB,CAAqDF,cAArD,CAAkBE,QAAlB,CAA4BC,WAA5B,CAAqDH,cAArD,CAA4BG,WAA5B,CAAyCC,OAAzC,CAAqDJ,cAArD,CAAyCI,OAAzC,CAEAV,SAAS,CAAC,UAAM,CACdS,WAAW,GACX;AACD,CAHQ,CAGN,EAHM,CAAT,CAKA,GAAGF,QAAQ,CAACI,MAAT,GAAoB,CAApB,EAAyB,CAACD,OAA7B,CAAsC,CACpC,mBAAO,4CAAP,CACD,CAED,mBACE,KAAC,QAAD,wBACE,KAAC,eAAD,WACCF,QAAQ,GAAK,IAAb,CACGA,QAAQ,CAACI,GAAT,CAAa,SAAAC,OAAO,qBACpB,KAAC,aAAD,EAAiC,OAAO,CAAE,GAA1C,CAA+C,UAAU,CAAC,MAA1D,uBACA,KAAC,WAAD,EAAa,OAAO,CAAEA,OAAtB,EADA,EAAoBA,OAAO,CAACC,GAA5B,CADoB,EAApB,CADH,CAMCP,QAAQ,CAACK,GAAT,CAAa,SAAAC,OAAO,qBACpB,KAAC,aAAD,EAAiC,OAAO,CAAE,GAA1C,CAA+C,UAAU,CAAC,MAA1D,uBACA,KAAC,WAAD,EAAa,OAAO,CAAEA,OAAtB,EADA,EAAoBA,OAAO,CAACC,GAA5B,CADoB,EAApB,CAPF,EADF,EADF,CAiBD,CA/BD,CAiCA,cAAeT,CAAAA,QAAf","sourcesContent":["import React, { Fragment, useContext, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'; \nimport { ContactItem } from './ContactItem';\nimport ContactContext from '../../context/contact/contactContext'\n\nconst Contacts = () => {\n  const contactContext = useContext(ContactContext);\n\n  const { contacts, filtered, getContacts, loading } = contactContext;\n\n  useEffect(() => {\n    getContacts();\n    //eslint-disable-next-line\n  }, []);\n\n  if(contacts.length === 0 && !loading) {\n    return <h4>Please add a contact</h4>\n  }\n\n  return (\n    <Fragment>\n      <TransitionGroup>\n      {filtered !== null\n        ? filtered.map(contact => (\n          <CSSTransition key={contact._id} timeout={500} classNames='item'>\n          <ContactItem contact={contact}/>\n          </CSSTransition>\n        )) \n      : contacts.map(contact => (\n        <CSSTransition key={contact._id} timeout={500} classNames='item'>\n        <ContactItem contact={contact}/>\n        </CSSTransition>\n      ))}\n      </TransitionGroup>\n    </Fragment>\n  );\n};\n\nexport default Contacts;"]},"metadata":{},"sourceType":"module"}